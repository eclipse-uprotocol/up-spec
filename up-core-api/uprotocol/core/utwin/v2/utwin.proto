/*
 * Copyright (c) 2024 General Motors GTO LLC
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 * SPDX-FileType: SOURCE
 * SPDX-FileCopyrightText: 2024 General Motors GTO LLC
 * SPDX-License-Identifier: Apache-2.0
 */
syntax = "proto3";

package uprotocol.core.utwin.v1;

import "uprotocol_options.proto";
import "ustatus.proto";
import "uri.proto";
import "umessage.proto";

option java_package = "org.eclipse.uprotocol.core.utwin.v1";
option java_outer_classname = "UTwinProto";
option java_multiple_files = true;

// uTwin Service interface definition
service uTwin {
  option (name) = "core.utwin"; // Service name
  option (version_major) = 2;
  option (version_minor) = 0;
  option (id) = 26;

  // A uE calls this API to retrieve the last uMessages for a given set of topics.<br>
  // What is returned is a list of MessageResponse with the status for message retreival
  // and the event itself if uTwin was able to fetch it. uTwin will also return 
  // status for those messages that it was unable to fetch (i.e. due to NOT_FOUND 
  // or PERMISSION_DENIED.<br>
  rpc GetLastMessages(uprotocol.v1.UUriBatch) returns (GetLastMessagesResponse) {
    option (method_id) = 1;
  }

  // A call to SetLasMessage (typically from uBus) to update the uTwin internal cache 
  // with a message for a given topic (UMessage.source). 
  // Return value status.Code is one of:
  // - OK if UMessage was successfully stored in uTwin
  // - INVALID argument if uTwin encountered an issue with UMessage content (source field in particular) 
  // - PERMISSION_DENIED if requesting uE does not have permission to access the Topic
  // - RESOURCE_EXHAUSTED if uTwin has no more memory available to store new UMessages
  rpc SetLastMessage(uprotocol.v1.UMessage) returns (uprotocol.v1.UStatus) {
    option (method_id) = 2;
  }

}


// Response that contains the status and message per topic
message MessageResponse {
  // Topic that was requested to be fetched
  uprotocol.v1.UUri topic = 1;

  // Status (success or not) when fetching the last event for said topic
  uprotocol.v1.UStatus status = 2;

  // message when the topic has been fetched successfully, otherwise empty
  uprotocol.v1.UMessage message = 3;
}


// Message returned by the rpc GetLastMessages.
message GetLastMessagesResponse {
  // List of one or more messages and the results for fetching the message per topic
  repeated MessageResponse responses = 2;
}
