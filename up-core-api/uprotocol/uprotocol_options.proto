/*
 * Copyright (c) 2023 General Motors GTO LLC
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 * SPDX-FileType: SOURCE
 * SPDX-FileCopyrightText: 2023 General Motors GTO LLC
 * SPDX-License-Identifier: Apache-2.0
 */
syntax = "proto3";

package uprotocol;

import "google/protobuf/descriptor.proto";

option java_package = "org.eclipse.uprotocol";
option java_multiple_files = true;

// Service Options & Attributes
extend google.protobuf.ServiceOptions {
  // Name of the service that can be used in uri
  string name = 51100;

  // Semantic 2.0 major versioning
  uint32 version_major = 51101;

  // Semantic 2.0 minor versioning
  uint32 version_minor = 51102;

  // Globally unique service id
  uint32 id = 51103;

  // Code Access Permission (CAP) Level for the uE
  uint32 permission_level = 51104;

  // Service declared published topics
  repeated UServiceTopic publish_topic = 51105;

  // uService declaired notification topics
  repeated UServiceTopic notification_topic = 51106;
}


extend google.protobuf.MethodOptions {
  // RPC method id (unique within containing service)
  optional uint32 method_id = 51200;
  // Code Access Permission (CAP) Level for the method
  uint32 method_permission_level = 51201;
}


extend google.protobuf.MessageOptions {
  // Topic base id (unique within containing service)
  // The topic base id is added to a resource id to form a specific topic id.
  optional uint32 base_topic_id = 51300;
  // Code Access Permission (CAP) Level for the topic
  uint32 topic_permission_level = 51301;
}


extend google.protobuf.FieldOptions {
  // Name mask for exported resources
  optional string resource_name_mask = 51400;

}

extend google.protobuf.EnumValueOptions {
  // MIME type mapping
  optional string mime_type = 51500;

  // CloudEvent String representation of the uProtocol enum value
  optional string ce_name = 51501;
}


// the following is used to declare service level topics, what a service publishes
message UServiceTopic {
  // The topic id. <br>
  // * *MUST* be unique within the uService scope
  // * *MUST* start at 0x800h
  uint32 id = 1;
  
  // Topic name represented as a string
  string name = 2;

  // Name of the protobuf.Message
  string message = 3;
}