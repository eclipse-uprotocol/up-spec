/*
 * SPDX-FileCopyrightText: 2023 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 * 
 * This program and the accompanying materials are made available under
 * the terms of the Apache License Version 2.0 which is available at
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * SPDX-FileType: SOURCE
 * SPDX-License-Identifier: Apache-2.0
 */
syntax = "proto3";

package uprotocol.v1;

import "google/protobuf/descriptor.proto";

option java_package = "org.eclipse.uprotocol.v1";
option java_multiple_files = true;

// File Options & Attributes
extend google.protobuf.FileOptions {
  // The contents of the file are compatible with SOME/IP serialization format
  optional bool file_someip_compatible = 51005;
}


// Service Options & Attributes
extend google.protobuf.ServiceOptions {
  // Name of the service that can be used in uri
  string service_name = 51100;

  // Semantic 2.0 major versioning
  uint32 service_version_major = 51101;

  // Semantic 2.0 minor versioning
  uint32 service_version_minor = 51102;

  // Globally unique service id
  uint32 service_id = 51103;

  // Code Access Permission (CAP) Level for the uE
  uint32 service_permission_level = 51104;

  // Service declared published topics
  repeated UServiceTopic publish_topic = 51105;

  // uService declaired notification topics
  repeated UServiceTopic notification_topic = 51106;

  // uService shall use SOME/IP serialization format and NOT protobuf format
  optional bool service_someip = 51107;
}



extend google.protobuf.MethodOptions {
  // RPC method id (unique within containing service)
  optional uint32 method_id = 51200;
  // Code Access Permission (CAP) Level for the method
  uint32 method_permission_level = 51201;
}


// Message Options & Attributes
extend google.protobuf.MessageOptions {
  // Message should support SOME/IP serialization format
  optional bool message_someip = 51300;

  // Message maximum size in bytes
  optional uint32 message_size = 51301;
}



// Enum Options & Attributes
extend google.protobuf.EnumOptions {
  // Enum should support SOME/IP serialization format
  optional bool enum_someip = 51401;

  // Enum maximum size in bytes (if not specified, default is 4 bytes)
  optional uint32 enum_size = 51402;
}

extend google.protobuf.EnumValueOptions {
  // MIME type mapping
  optional string mime_type = 51500;

  // CloudEvent String representation of the uProtocol enum value
  optional string ce_name = 51501;
}


// Field Options & Attributes
extend google.protobuf.FieldOptions {
  // Maximum field size in bytes
  optional uint32 field_size = 51600;

  // Maximum field key size in bytes
  optional uint32 field_key_size = 51601;

  // Mximum count of elements
  optional uint32 field_count = 51602;
}


// the following is used to declare service level topics, what a service publishes
message UServiceTopic {
  // The topic identifier.
  // * *MUST* be unique within the uService scope
  // * *MUST* be in the 0x8000h-0xFFFFh range
  uint32 id = 1;

  // Topic name represented as a string. <br>
  // - *MUST* be unique within the containing service scope
  string name = 2;

  // URL/resource name that uniquely identifies the type of the
  // protocol buffer message. This string must contain at least
  // one "/" character. The last segment of the URL's path must represent
  // the fully qualified name of the type (ex. 
  // `/org.eclipse.uprotocol.core.usubscription.v3.SubscriptionRequest`.
  // The name should be in a canonical form (e.g., leading "." is not accepted).
  string message = 3;

  // Code Access Permission (CAP) Level for said topic
  uint32 permission_level = 4;
}